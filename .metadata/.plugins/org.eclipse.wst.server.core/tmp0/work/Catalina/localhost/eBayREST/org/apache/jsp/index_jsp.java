/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-07-28 13:40:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n");
      out.write("  <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n");
      out.write("  <style>\n");
      out.write("  \ttable{\n");
      out.write("  \t\tborder-spacing:7px;\n");
      out.write("  \t\tborder-collapse:separate;\n");
      out.write("  \t\ttable-layout:fixed;\n");
      out.write("  \t\twidth:300px;\n");
      out.write("  \t}\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div align=\"center\">\n");
      out.write("\t    <h2>eBay REST API</h2>\n");
      out.write("\t    <h4>Saurabh Devgun</h4>\n");
      out.write("\t    <h5>MT2015101</h5>\n");
      out.write("    </div>\n");
      out.write("    <div class = \"container\">\n");
      out.write("    <table class=\"table table-hover table-striped table-bordered\" style=\"border-spacing:5px\">\n");
      out.write("      <thead>\n");
      out.write("        <tr>\n");
      out.write("          <th>REST Services Exposed</th>\n");
      out.write("          <th>Link</th>\n");
      out.write("        </tr>\n");
      out.write("      </thead>\n");
      out.write("      <tbody>\n");
      out.write("        <tr>\n");
      out.write("          <td>Front End: Price Subcategory API</td>\n");
      out.write("          <td><a href=\"priceAPI.jsp\">http://192.168.15.101:8080/eBayREST/priceAPI.jsp</a></td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("          <td>Back End: Seller With Pin</td>\n");
      out.write("          <td><a href=\"sellerWithPin.jsp\">http://192.168.15.101:8080/eBayREST/webapi/item/try?seller_address_pin=12345</a></td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("          <td>Open Source: Facebook Login</td>\n");
      out.write("          <td>Others' PC:<a href=\"loginThroughFacebook.jsp\">http://192.168.15.101:8080/eBayREST/loginThroughFacebook.jsp</a>\n");
      out.write("\t\t\t\t<br>My PC: <a href=\"loginThroughFacebookWithMoreControl.jsp\">http://localhost:8080/eBayREST/loginThroughFacebook</a>\n");
      out.write("          </td>\n");
      out.write("        </tr>\n");
      out.write("      </tbody>\n");
      out.write("    </table>\n");
      out.write("    </div>\n");
      out.write("    <br><br><br>\n");
      out.write("    <div class=\"container\">\n");
      out.write("    \t<table class=\"table table-hover table-striped table-bordered\">\n");
      out.write("      <thead>\n");
      out.write("        <tr>\n");
      out.write("          <th>REST Service Consumed</th>\n");
      out.write("          <th>Link</th>\n");
      out.write("        </tr>\n");
      out.write("      </thead>\n");
      out.write("      <tbody>\n");
      out.write("        <tr>\n");
      out.write("          <td>Front-End: Display Seller Details with Age less than given age<br>Vikas Pandey<br>MT2015127</td>\n");
      out.write("          <td><a href=\"http://192.168.15.127:8080/eBayREST/GUI.jsp\">http://192.168.15.127:8080/eBayREST/GUI.jsp</a></td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("          <td>Back-end: lessThanDiscount(input:discount)<br>Items with discount less than specified<br>Aditya Tiwari<br>MT2015006</td>\n");
      out.write("          <td><a href=\"http://192.168.15.6:8080/eBayREST/itemDiscount.jsp\">http://192.168.15.6:8080/eBayREST/webapi/items/discounts/90</a></td>\n");
      out.write("        </tr>\n");
      out.write("      </tbody>\n");
      out.write("    </table>\n");
      out.write("    </div>\n");
      out.write("    <!-- \n");
      out.write("    <p><a href=\"priceAPI.jsp\">Price API</a></p>\n");
      out.write("    <p><a href=\"loginThroughFacebook.jsp\">Login through Facebook</a></p>\n");
      out.write("    <p><a href=\"sellerWithPin.jsp\">Get Sellers In City with pin</a></p> \n");
      out.write("    -->\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
